{
  "core_nodes": [
    {
      "id": "core.begin",
      "file": "begin.py",
      "category": "control_flow",
      "description": "Starting point of the workflow"
    },
    {
      "id": "core.end",
      "file": "end.py",
      "category": "control_flow",
      "description": "Ending point of the workflow"
    },
    {
      "id": "core.conditional",
      "file": "conditional.py",
      "category": "control_flow",
      "description": "Branch workflow based on conditions"
    },
    {
      "id": "core.loop",
      "file": "loop.py",
      "category": "control_flow",
      "description": "Loop through items or repeat operations"
    },
    {
      "id": "core.switch",
      "file": "switch.py",
      "category": "control_flow",
      "description": "Multi-way branching based on a value"
    },
    {
      "id": "core.trigger",
      "file": "trigger.py",
      "category": "control_flow",
      "description": "Trigger execution of a branch"
    },
    {
      "id": "core.variable",
      "file": "variable.py",
      "category": "data",
      "description": "Store and retrieve variable values"
    },
    {
      "id": "core.object_property",
      "file": "object_property.py",
      "category": "data",
      "description": "Access and modify object properties"
    },
    {
      "id": "core.array_operations",
      "file": "array_operations.py",
      "category": "data",
      "description": "Perform operations on arrays"
    },
    {
      "id": "core.json_parser",
      "file": "json_parser.py",
      "category": "data",
      "description": "Parse and stringify JSON data"
    },
    {
      "id": "core.csv_parser",
      "file": "csv_parser.py",
      "category": "data",
      "description": "Parse and format CSV data"
    },
    {
      "id": "core.data_merger",
      "file": "data_merger.py",
      "category": "data",
      "description": "Merge multiple data sources"
    },
    {
      "id": "core.file_reader",
      "file": "file_reader.py",
      "category": "file_storage",
      "description": "Read data from files"
    },
    {
      "id": "core.file_writer",
      "file": "file_writer.py",
      "category": "file_storage",
      "description": "Write data to files"
    },
    {
      "id": "core.math_operations",
      "file": "math_operations.py",
      "category": "math",
      "description": "Perform mathematical operations"
    },
    {
      "id": "core.logic_operations",
      "file": "logic_operations.py",
      "category": "math",
      "description": "Perform logical operations"
    },
    {
      "id": "core.number_formatter",
      "file": "number_formatter.py",
      "category": "math",
      "description": "Format numbers for display"
    },
    {
      "id": "core.number_input",
      "file": "number_input.py",
      "category": "math",
      "description": "Input for numeric values"
    },
    {
      "id": "core.text_input",
      "file": "text_input.py",
      "category": "text",
      "description": "Input for text values"
    },
    {
      "id": "core.text_output",
      "file": "text_output.py",
      "category": "text",
      "description": "Display text output"
    },
    {
      "id": "core.string_operations",
      "file": "string_operations.py",
      "category": "text",
      "description": "Perform string operations"
    },
    {
      "id": "core.text_template",
      "file": "text_template.py",
      "category": "text",
      "description": "Create text from templates"
    },
    {
      "id": "core.regex",
      "file": "regex.py",
      "category": "text",
      "description": "Regular expression operations"
    },
    {
      "id": "core.delay",
      "file": "delay.py",
      "category": "utilities",
      "description": "Delay execution for a specified time"
    },
    {
      "id": "core.random_generator",
      "file": "random_generator.py",
      "category": "utilities",
      "description": "Generate random values"
    },
    {
      "id": "core.prompt_template",
      "file": "prompt_template.py",
      "category": "utilities",
      "description": "Create templates for prompts"
    },
    {
      "id": "core.http_request",
      "file": "http_request.py",
      "category": "web_api",
      "description": "Make HTTP requests to external APIs"
    }
  ]
}